package crouskiebackoffice.view;

import crouskiebackoffice.controle.ControllerEditProduct;
import crouskiebackoffice.controle.ControllerImageProduct;
import crouskiebackoffice.controle.ErrorHandeler;
import crouskiebackoffice.controle.Navigator;
import crouskiebackoffice.model.CollectionModelComboBox;
import crouskiebackoffice.model.DataProduct;
import crouskiebackoffice.model.Product;
import crouskiebackoffice.model.ProductAttachImage;
import crouskiebackoffice.model.listmodel.DynamicListColorModel;
import crouskiebackoffice.model.listmodel.DynamicListModel;
import crouskiebackoffice.model.listmodel.DynamicListSizeModel;
import crouskiebackoffice.model.listmodel.DynamicListTagModel;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 * Interface graphique permettant d'édité les donnée d'un produit (il pourra ensuite être ajouté à la BD s'il n'existe pas déjà ou juste mis à jours)
 * Donc cette interface peut permettre d'ajouté ou édité un {@link Product}
 */
public class EditProduct extends javax.swing.JPanel {

    private ControllerEditProduct controller;
    private ControllerImageProduct controllerImage;
    private Product product;

    /**
     *
     * @param prod le produit à édité
     */
    public EditProduct(Product prod) {
        System.out.println(prod);
        product = prod;
        this.controller = new ControllerEditProduct(this, prod);
        initComponents();
        this.controllerImage = new ControllerImageProduct(imagesPane, new ProductAttachImage(product), addImage);

        listSize = new ListDynamicPanel("Taille", controller.getAddDelListItem());
        row3.add(listSize);

        listColor = new ListDynamicPanel("Couleurs", controller.getAddDelListItem());
        row3.add(listColor);

        listTag = new ListDynamicPanel("Tags", controller.getAddDelListItem());
        row3.add(listTag);

        listTag.setModel(new DynamicListTagModel(product));
        listColor.setModel(new DynamicListColorModel(product));
        listSize.setModel(new DynamicListSizeModel(product));

        enVenteCheckBox.setSelected(product.isEnVente());

        nameInput.setText(prod.getName());
        descriptionInput.setText(prod.getDescription());
        priceInput.setText(prod.getPrice() + "");

    }

    private void clearAll() {
        controller.clearAll();
    }

    public JComboBox<String> getCollectionComboBox() {
        return collectionComboBox;
    }

    public JTextArea getDescriptionInput() {
        return descriptionInput;
    }

    public JTextField getNameInput() {
        return nameInput;
    }

    public JFormattedTextField getPriceInput() {
        return priceInput;
    }

    public ListDynamicPanel getListTag() {
        return listTag;
    }

    public ListDynamicPanel getListColor() {
        return listColor;
    }

    public ListDynamicPanel getListSize() {
        return listSize;
    }

    public JCheckBox getEnVenteCheckBox() {
        return enVenteCheckBox;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        splitPane = new javax.swing.JSplitPane();
        leftPane = new javax.swing.JPanel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        row1 = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        collectionLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        collectionComboBox = new javax.swing.JComboBox<>();
        addCollection = new javax.swing.JButton();
        enVenteCheckBox = new javax.swing.JCheckBox();
        row2 = new javax.swing.JPanel();
        descriptionLabel = new javax.swing.JLabel();
        descriptionScrollArea = new javax.swing.JScrollPane();
        descriptionInput = new javax.swing.JTextArea();
        prixLabel = new javax.swing.JLabel();
        priceInput = new javax.swing.JFormattedTextField();
        row3 = new javax.swing.JPanel();
        row4 = new javax.swing.JPanel();
        submitBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        imagesPane = new javax.swing.JPanel();
        addImage = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        splitPane.setBackground(new java.awt.Color(0, 0, 0));
        splitPane.setDividerSize(3);
        splitPane.setForeground(new java.awt.Color(255, 255, 255));

        leftPane.setLayout(new javax.swing.BoxLayout(leftPane, javax.swing.BoxLayout.Y_AXIS));
        leftPane.add(filler2);

        row1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 40, 5));

        nameLabel.setText("name");
        row1.add(nameLabel);

        nameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameInputActionPerformed(evt);
            }
        });
        row1.add(nameInput);

        collectionLabel.setText("collection");
        row1.add(collectionLabel);

        collectionComboBox.setModel(new CollectionModelComboBox(product, addCollection));
        jPanel1.add(collectionComboBox);

        addCollection.setText("+");
        addCollection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCollectionActionPerformed(evt);
            }
        });
        jPanel1.add(addCollection);

        row1.add(jPanel1);

        enVenteCheckBox.setSelected(true);
        enVenteCheckBox.setText("produit en vente");
        row1.add(enVenteCheckBox);

        leftPane.add(row1);

        row2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 40, 5));

        descriptionLabel.setText("description");
        row2.add(descriptionLabel);

        descriptionScrollArea.setMinimumSize(new java.awt.Dimension(200, 40));

        descriptionInput.setColumns(20);
        descriptionInput.setRows(5);
        descriptionInput.setMinimumSize(new java.awt.Dimension(200, 40));
        descriptionScrollArea.setViewportView(descriptionInput);

        row2.add(descriptionScrollArea);

        prixLabel.setText("prix (en €)");
        row2.add(prixLabel);

        priceInput.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        row2.add(priceInput);

        leftPane.add(row2);

        row3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 30, 20));
        leftPane.add(row3);

        row4.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 5));

        submitBtn.setText("Valider");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });
        row4.add(submitBtn);

        cancelBtn.setText("Annuler");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        row4.add(cancelBtn);

        leftPane.add(row4);
        leftPane.add(filler1);

        splitPane.setLeftComponent(leftPane);

        addImage.setText("ajouté une image");
        addImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addImageActionPerformed(evt);
            }
        });
        imagesPane.add(addImage);

        splitPane.setRightComponent(imagesPane);

        add(splitPane);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        Navigator.getInstance().goBack();
        clearAll();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        MainWindow.instance.getStatusbar().showMsg("Envoi des données");
        MainWindow.instance.getStatusbar().setLoading(true);

        boolean succes = false;
        try {
            succes = controller.save(nameInput.getText(), descriptionInput.getText(),
                    priceInput.getText(), enVenteCheckBox.isSelected(), collectionComboBox.getModel(),
                    (DynamicListModel) listColor.getModel(), (DynamicListModel) listSize.getModel(), (DynamicListModel) listTag.getModel(),
                    controllerImage.getPictures());
            if (succes) {
                clearAll();
                Navigator.getInstance().goBack();
                ErrorHandeler.getInstance().exec(() -> {
                    DataProduct.getInstance().notif();
                    return true;
                });

                MainWindow.instance.getStatusbar().showMsg("Données envoyé avec succes", 2000);

            } else {
                MainWindow.instance.getStatusbar().showMsg("Echec lors de l'envoi des données", 2000);
            }

        } catch (NumberFormatException | SQLException ex) {
            MainWindow.instance.getStatusbar().showMsg("Erreur", 2000);
            Logger.getLogger(EditProduct.class.getName()).log(Level.SEVERE, null, ex);
        }
        MainWindow.instance.getStatusbar().setLoading(false);
    }//GEN-LAST:event_submitBtnActionPerformed

    private void nameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameInputActionPerformed

    private void addImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addImageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addImageActionPerformed

    private void addCollectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCollectionActionPerformed
        
    }//GEN-LAST:event_addCollectionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCollection;
    private javax.swing.JButton addImage;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox<String> collectionComboBox;
    private javax.swing.JLabel collectionLabel;
    private javax.swing.JTextArea descriptionInput;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JScrollPane descriptionScrollArea;
    private javax.swing.JCheckBox enVenteCheckBox;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JPanel imagesPane;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel leftPane;
    private javax.swing.JTextField nameInput;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JFormattedTextField priceInput;
    private javax.swing.JLabel prixLabel;
    private javax.swing.JPanel row1;
    private javax.swing.JPanel row2;
    private javax.swing.JPanel row3;
    private javax.swing.JPanel row4;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JButton submitBtn;
    // End of variables declaration//GEN-END:variables
    private ListDynamicPanel listTag;
    private ListDynamicPanel listColor;
    private ListDynamicPanel listSize;

}
